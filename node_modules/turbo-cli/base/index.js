var fs = require('fs')
var Promise = require('bluebird')
var shell = require('shelljs')
var path = require('path')

var bases = {
	startup: 	'https://github.com/Turbo-360/base-startup.git',
	performer: 	'https://github.com/Turbo-360/base-performer.git'
}


module.exports = {

	installBase: function(name){
		// console.log('Install Base: ' + name)
		return new Promise(function(resolve, reject){

			var baseRepo = bases[name]
			if (baseRepo == null){
				reject(new Error('Base "' + name + '" not found'))
				return
			}

			if (shell.exec('git clone ' + baseRepo).code !== 0) {
				shell.echo('Error: Git clone failed')
				reject(new Error('Git clone failed'))
				return
			}

			var repoName = 'base-' + name

			// copy routes folder
			shell.rm('-rf', 'routes') // remove whatever was there before
			shell.mkdir('-p', 'routes')
			shell.cp('-R', repoName+'/routes/*', 'routes/')

			// copy views folder
			shell.rm('-rf', 'views') // remove whatever was there before
			shell.mkdir('-p', 'views')
			shell.cp('-R', repoName+'/views/*', 'views/')

			// copy controllers
			shell.rm('-rf', 'controllers') // remove whatever was there before
			shell.mkdir('-p', 'controllers')
			shell.cp('-R', repoName+'/controllers/*', 'controllers/')

			// copy app.js
			shell.cp('-R', repoName+'/app.js', 'app.js')

			shell.rm('-rf', repoName) // remove original when done

			resolve({
				confirmation: 'success',
				data: 'Base implemented'
			})
		})
	}


}
